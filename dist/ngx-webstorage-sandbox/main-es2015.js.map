{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./projects/ngx-webstorage/src/lib/constants/config.ts","./projects/ngx-webstorage/src/lib/constants/strategy.ts","./projects/ngx-webstorage/src/lib/core/nativeStorage.ts","./projects/ngx-webstorage/src/lib/core/strategyCache.ts","./projects/ngx-webstorage/src/lib/core/templates/asyncStorage.ts","./projects/ngx-webstorage/src/lib/core/templates/syncStorage.ts","./projects/ngx-webstorage/src/lib/decorators.ts","./projects/ngx-webstorage/src/lib/helpers/compat.ts","./projects/ngx-webstorage/src/lib/helpers/decoratorBuilder.ts","./projects/ngx-webstorage/src/lib/helpers/noop.ts","./projects/ngx-webstorage/src/lib/helpers/storageKeyManager.ts","./projects/ngx-webstorage/src/lib/helpers/valueWithExpiration.ts","./projects/ngx-webstorage/src/lib/module.ts","./projects/ngx-webstorage/src/lib/services/index.ts","./projects/ngx-webstorage/src/lib/services/localStorage.ts","./projects/ngx-webstorage/src/lib/services/sessionStorage.ts","./projects/ngx-webstorage/src/lib/services/strategyIndex.ts","./projects/ngx-webstorage/src/lib/strategies/baseSyncStorage.ts","./projects/ngx-webstorage/src/lib/strategies/inMemory.ts","./projects/ngx-webstorage/src/lib/strategies/index.ts","./projects/ngx-webstorage/src/lib/strategies/localStorage.ts","./projects/ngx-webstorage/src/lib/strategies/sessionStorage.ts","./projects/ngx-webstorage/src/public_api.ts","./projects/ngx-webstorage/src/stubs/storage.stub.ts","./projects/ngx-webstorage/src/stubs/storageStrategy.stub.ts","./src/app/_components/appForm/appForm.ts","./src/app/_components/appForm/template.html","./src/app/_components/appView/appView.ts","./src/app/_components/appView/template.html","./src/app/_components/root/root.ts","./src/app/_components/root/template.html","./src/app/eager/components/eager/eager.ts","./src/app/eager/components/eager/template.html","./src/app/eager/module.ts","./src/app/lib.ts","./src/app/module.ts","./src/app/routing.ts","./src/app/shared/module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,0C;;;;;;;;;;;;;;;;;ACZO,MAAM,aAAa,GAAG,gBAAgB,CAAC;AACvC,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAC7B,MAAM,sBAAsB,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;;ACF5C,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IAC5B,6CAAwB;IACxB,iDAA4B;IAC5B,oDAA+B;AAChC,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ6D;AAGvD,MAAM,aAAa,GAA+B,IAAI,yDAAc,CAAa,sBAAsB,CAAC,CAAC;AAEzG,SAAS,eAAe;IAC9B,OAAO,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;AACrE,CAAC;AAEM,MAAM,oBAAoB,GAAoB,EAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,eAAe,EAAC,CAAC;AAEpG,MAAM,eAAe,GAA+B,IAAI,yDAAc,CAAa,wBAAwB,CAAC,CAAC;AAE7G,SAAS,iBAAiB;IAChC,OAAO,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC;AACvE,CAAC;AAEM,MAAM,sBAAsB,GAAoB,EAAC,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,iBAAiB,EAAC,CAAC;;;;;;;;;;;;;;;;;;ACV1G,MAAM,oBAAoB;IADjC;QAGW,WAAM,GAAsC,EAAE,CAAC;KAsBzD;IApBA,GAAG,CAAC,YAAoB,EAAE,GAAW;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,GAAG,CAAC,YAAoB,EAAE,GAAW,EAAE,KAAU;QAChD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,GAAG,CAAC,YAAoB,EAAE,GAAW;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,YAAoB;QACzB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAmB,CAAC;IACjD,CAAC;IAES,aAAa,CAAC,YAAoB;QAC3C,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAmB,CAAC;IACxD,CAAC;;wFAvBW,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;;;ACHmC;AACuB;AAElF,MAAM,YAAY;IAExB,YAAsB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IACpD,CAAC;IAED,QAAQ,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAC9D,mDAAG,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAChE,CAAC;IACH,CAAC;IAED,KAAK,CAAC,GAAW,EAAE,KAAU;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,KAAK,CAAC,GAAY;QACjB,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxG,CAAC;IAED,eAAe,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAExD,OAAO,CAAC,GAAW;QAClB,GAAG,GAAG,mFAA2B,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CACnC,sDAAM,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,GAAG,CAAC,EAChE,yDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACvC,oEAAoB,EAAE,EACtB,2DAAW,EAAE,CACb,CAAC;IACH,CAAC;CACD;;;;;;;;;;;;;;;;;;;;;;ACnCuC;AAE0B;AAEkB;AAE7E,MAAM,WAAW;IACvB,YAAsB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IACpD,CAAC;IAED,QAAQ,CAAC,GAAW;QACnB,IAAI,KAAU,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjI,OAAO,KAAK,CAAC;IACd,CAAC;IAED,KAAK,CAAC,GAAW,EAAE,KAAU;QAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,+CAAI,CAAC,CAAC;QAC3E,OAAO,KAAK,CAAC;IACd,CAAC;IAED,KAAK,CAAC,GAAY;QACjB,IAAI,GAAG,KAAK,SAAS;YACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mFAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,+CAAI,CAAC,CAAC;;YAChE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,+CAAI,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe,KAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAEvD,OAAO,CAAC,GAAW;QAClB,GAAG,GAAG,mFAA2B,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CACnC,sDAAM,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,GAAG,CAAC,EAChE,yDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACvC,oEAAoB,EAAE,EACtB,2DAAW,EAAE,CACb,CAAC;IACH,CAAC;CAED;;;;;;;;;;;;;;;;;;;ACxCsD;AACK;AAErD,SAAS,YAAY,CAAC,GAAY,EAAE,YAAkB;IAC5D,OAAO,UAAS,SAAS,EAAE,QAAQ;QAClC,kGAA2C,CAAC,wEAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;IAC9G,CAAC,CAAC;AACH,CAAC;AAEM,SAAS,cAAc,CAAC,GAAY,EAAE,YAAkB;IAC9D,OAAO,UAAS,SAAS,EAAE,QAAQ;QAClC,kGAA2C,CAAC,0EAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;IAChH,CAAC,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;ACXM,MAAM,YAAY;IAExB,MAAM,CAAC,kBAAkB,CAAC,OAAmB;QAC5C,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI;YACH,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAChC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;gBAC1C,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;aACnC;;gBACI,SAAS,GAAG,KAAK,CAAC;SACvB;QAAC,OAAM,CAAC,EAAE;YACV,SAAS,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,UAAU;QAChB,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE;QACpB,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,iBAAiB,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC,GAAC,IAAI,CAAC;IAC3D,CAAC;CAED;;;;;;;;;;;;;;;;;;;ACvBuD;AAEF;AAC1B;AAErB,MAAM,gBAAgB;IAE5B,MAAM,CAAC,0BAA0B,CAAC,YAAwC,EAAE,SAAS,EAAE,QAAgB,EAAE,GAAY,EAAE,eAAoB,IAAI;QAC9I,MAAM,MAAM,GAAW,GAAG,IAAI,QAAQ,CAAC;QACvC,IAAI,UAAkB,CAAC;QAEvB,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE;YAC1C,GAAG,EAAE;gBACJ,IAAI,KAAU,CAAC;gBACf,sEAAiB,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;gBACpF,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC;YACnD,CAAC;YACD,GAAG,EAAE,UAAS,KAAK;gBAClB,sEAAiB,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,uCAAI,CAAC,CAAC;YACtE,CAAC;SACD,CAAC,CAAC;QAEH,SAAS,MAAM;YACd,IAAI,UAAU,KAAK,SAAS;gBAAE,OAAO,UAAU,CAAC;YAChD,OAAO,UAAU,GAAG,2EAA2B,CAAC,MAAM,CAAC,CAAC;QACzD,CAAC;IACF,CAAC;CACD;;;;;;;;;;;;;;;;AC3BM,SAAS,IAAI,KAAI,CAAC;;;;;;;;;;;;;;;;;ACAmE;AAGrF,MAAM,iBAAiB;IAM7B,MAAM,CAAC,SAAS,CAAC,GAAW;QAC3B,GAAG,GAAG,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAClE,OAAO,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;IAC1E,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,GAAW;QACjC,OAAO,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAc;QAC9B,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,SAAiB;QACpC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,MAAe;QACtC,iBAAiB,CAAC,eAAe,GAAG,MAAM,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,MAAkC;QAC7D,IAAI,QAAQ,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,WAAW,IAAI,MAAM;YAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,eAAe,IAAI,MAAM;YAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC5E,CAAC;;AA7BM,wBAAM,GAAG,4DAAa,CAAC;AACvB,2BAAS,GAAG,+DAAgB,CAAC;AAC7B,iCAAe,GAAG,qEAAsB,CAAC;;;;;;;;;;;;;;;;;ACPX;AAE/B,MAAM,mBAAmB;IAE/B,YAAmB,CAAM;QAAN,MAAC,GAAD,CAAC,CAAK;QACxB,IAAI,CAAC,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACZ;aAAM;YACN,IAAI,CAAC,EAAE,GAAG,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC;SACpB;IACF,CAAC;IAED,aAAa,CAAC,SAAiB;QAC9B,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,4DAAuB,EAAE,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,4DAAuB,EAAE,CAAC;IAClD,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAED,YAAY;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACnB,CAAC;CAED;;;;;;;;;;;;;;;;;;;;;;;;AC5B8G;AAC7B;AACxC;AACI;AACS;AAEO;;;AAEvD,MAAM,UAAU,GAA+C,IAAI,yDAAc,CAA6B,uBAAuB,CAAC,CAAC;AAEvI,SAAS,OAAO,CAAC,KAAoB;IAC3C,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,OAAO,GAAG,EAAE,CAAC,wEAAmB,CAAC;AAClC,CAAC;AAGM,MAAM,mBAAmB;IAE/B,YAAY,KAAoB,EAAkC,MAAkC;QACnG,IAAI,MAAM;YAAE,8FAAsC,CAAC,MAAM,CAAC,CAAC;;YACtD,OAAO,CAAC,KAAK,CAAC,mGAAmG,CAAC,CAAC;IACzH,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,SAAqC,EAAE;QACrD,OAAO;YACN,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE;gBACV;oBACC,OAAO,EAAE,UAAU;oBACnB,QAAQ,EAAE,MAAM;iBAChB;gBACD,qEAAoB;gBACpB,uEAAsB;gBACtB,GAAG,qDAAQ;gBACX,GAAG,yDAAU;gBACb;oBACC,OAAO,EAAE,0DAAe;oBACxB,UAAU,EAAE,OAAO;oBACnB,IAAI,EAAE,CAAC,kEAAa,CAAC;oBACrB,KAAK,EAAE,IAAI;iBACX;aACD;SACD,CAAC;IACH,CAAC;;sFA3BW,mBAAmB,qLAEuB,UAAU;gHAFpD,mBAAmB;;;;;;;;;;;;;;;;;;;AChB2B;AAEI;AAExD,MAAM,QAAQ,GAAe;IACnC,sEAA2B;IAC3B,0EAA6B;CAC7B,CAAC;;;;;;;;;;;;;;;;;;;;;ACNwD;AACZ;AAEU;AAEjD,MAAM,mBAAoB,SAAQ,oEAAW;CAAG;AAEhD,SAAS,YAAY,CAAC,KAAoB;IAChD,MAAM,QAAQ,GAAyB,KAAK,CAAC,aAAa,CAAC,wEAAuB,CAAC,CAAC;IACpF,OAAO,IAAI,oEAAW,CAAC,QAAQ,CAAC,CAAC;AAClC,CAAC;AAEM,MAAM,2BAA2B,GAAoB;IAC3D,OAAO,EAAE,mBAAmB;IAC5B,UAAU,EAAE,YAAY;IACxB,IAAI,EAAE,CAAC,yDAAa,CAAC;CACrB,CAAC;;;;;;;;;;;;;;;;;;;;;AChBwD;AACZ;AAEU;AAEjD,MAAM,qBAAsB,SAAQ,oEAAW;CAAG;AAElD,SAAS,YAAY,CAAC,KAAoB;IAChD,MAAM,QAAQ,GAAyB,KAAK,CAAC,aAAa,CAAC,0EAAyB,CAAC,CAAC;IACtF,OAAO,IAAI,oEAAW,CAAC,QAAQ,CAAC,CAAC;AAClC,CAAC;AAEM,MAAM,6BAA6B,GAAoB;IAC7D,OAAO,EAAE,qBAAqB;IAC9B,UAAU,EAAE,YAAY;IACxB,IAAI,EAAE,CAAC,yDAAa,CAAC;CACrB,CAAC;;;;;;;;;;;;;;;;;;;;;AChB2B;AAEoB;AACO;;AAEjD,MAAM,oBAAoB,GAAG,kBAAkB,CAAC;AAGhD,MAAM,aAAa;IAKzB,YAA8D,UAAkC;QAAlC,eAAU,GAAV,UAAU,CAAwB;QAFvF,kBAAa,GAAoB,IAAI,yCAAO,EAAE,CAAC;QAGvD,IAAI,CAAC,UAAU;YAAE,UAAU,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,EAAE;aACpC,GAAG,CAAC,CAAC,QAA8B,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;aAClE,GAAG,CAAC,CAAC,IAAY,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;aAC7E,MAAM,CAAC,CAAC,KAAa,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC;aACzC,GAAG,CAAC,CAAC,KAAa,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,IAAY;QACtB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YAAE,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACxE,IAAI,QAAQ,GAAyB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC1B,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,2EAA0B,CAAC,CAAC;SAClD;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,IAAY,EAAE,QAAQ;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,IAAa;QACzB,IAAI,IAAI,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;YAC3C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,IAAY;QACvC,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,sBAAsB;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,WAAW,CAAC,IAAY;QAC9B,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,eAAe;QACrB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IACrG,CAAC;IAEM,aAAa,CAAC,IAAY,EAAE,mBAA4B,KAAK;QACnE,IAAI,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB;YAAE,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClG,MAAM,QAAQ,GAAyB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAA8B,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QACxH,IAAI,CAAC,QAAQ;YAAE,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAChD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAEM,QAAQ,CAAC,IAAY,EAAE,QAA8B,EAAE,mBAA4B,KAAK;QAC9F,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,gBAAgB,EAAE;YAClE,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;IACF,CAAC;;AA3DM,mBAAK,GAA6C,EAAE,CAAC;0EAFhD,aAAa,yDAKO,2DAAkB;8GALtC,aAAa,WAAb,aAAa,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;ACPc;AAEE;AACoB;AAI5D,MAAe,uBAAuB;IAI5C,YAAsB,OAAmB,EAAY,KAA2B;QAA1D,YAAO,GAAP,OAAO,CAAY;QAAY,UAAK,GAAL,KAAK,CAAsB;QAHvE,eAAU,GAAoB,IAAI,yCAAO,EAAE,CAAC;IAG8B,CAAC;IAIpF,IAAI,WAAW;QACd,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;YAAE,IAAI,CAAC,YAAY,GAAG,4EAA+B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvG,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,GAAG,CAAC,GAAW;QACd,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACvB,MAAM,mBAAmB,GAAG,IAAI,6EAAmB,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,mBAAmB,CAAC,SAAS,EAAE,EAAE;gBACpC,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;aAChB;YACD,IAAI,GAAG,mBAAmB,CAAC,YAAY,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,KAAK,SAAS;YAAE,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI;YACH,MAAM,IAAI,GAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5C,IAAI,IAAI,KAAK,IAAI,EAAE;gBAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;oBACzB,MAAM,mBAAmB,GAAG,IAAI,6EAAmB,CAAC,KAAK,CAAC,CAAC;oBAC3D,IAAI,mBAAmB,CAAC,SAAS,EAAE,EAAE;wBACpC,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;qBAChB;oBACD,IAAI,GAAG,mBAAmB,CAAC,YAAY,EAAE,CAAC;iBAC1C;qBAAM;oBACN,IAAI,GAAG,KAAK,CAAC;iBACb;gBACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;aACtC;SACD;QAAC,OAAM,GAAG,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;QAED,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB;QAC9C,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,IAAI,SAAS,EAAE;YACd,MAAM,mBAAmB,GAAG,IAAI,6EAAmB,CAAC,KAAK,CAAC,CAAC;YAC3D,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC,GAAG,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;SAC7C;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,GAAG,CAAC,GAAW;QACd,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;CAED;;;;;;;;;;;;;;;;;;;;;;AChF4C;AACc;AACH;AAEW;;;AAG5D,MAAM,uBAAuB;IAMnC,YAAoD,KAA2B;QAA3B,UAAK,GAAL,KAAK,CAAsB;QAJtE,eAAU,GAAoB,IAAI,yCAAO,EAAE,CAAC;QACrD,gBAAW,GAAY,IAAI,CAAC;QACnB,SAAI,GAAW,uBAAuB,CAAC,YAAY,CAAC;IAEqB,CAAC;IAEnF,GAAG,CAAC,GAAW;QACd,IAAI,CAAC,GAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE;YACjB,MAAM,mBAAmB,GAAG,IAAI,6EAAmB,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,mBAAmB,CAAC,SAAS,EAAE,EAAE;gBACpC,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;aAChB;YACD,CAAC,GAAG,mBAAmB,CAAC,YAAY,EAAE,CAAC;SACvC;QACD,OAAO,wCAAE,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB;QAC9C,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,IAAI,SAAS,EAAE;YACd,MAAM,mBAAmB,GAAG,IAAI,6EAAmB,CAAC,KAAK,CAAC,CAAC;YAC3D,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC,GAAG,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,GAAG,CAAC,GAAW;QACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;;AAzCe,oCAAY,GAAW,2EAA0B,CAAC;8FADtD,uBAAuB,yDAMf,qEAAoB;wHAN5B,uBAAuB,WAAvB,uBAAuB;;;;;;;;;;;;;;;;;;;;;ACTmB;AAEH;AACI;AACL;AAE5C,MAAM,kBAAkB,GAAyC,IAAI,yDAAc,CAAuB,oBAAoB,CAAC,CAAC;AAEhI,MAAM,UAAU,GAAe;IACrC,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,8DAAuB,EAAE,KAAK,EAAE,IAAI,EAAC;IAC7E,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,+DAAoB,EAAE,KAAK,EAAE,IAAI,EAAC;IAC1E,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,mEAAsB,EAAE,KAAK,EAAE,IAAI,EAAC;CAC5E,CAAC;;;;;;;;;;;;;;;;;;;;;;ACXwD;AACY;AAClB;AACI;AACN;;;AAI3C,MAAM,oBAAqB,SAAQ,qEAAuB;IAIhE,YAA6C,OAAmB,EAC1C,KAA2B,EACN,UAAe,EACpC,IAAY;QACjC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAJsB,YAAO,GAAP,OAAO,CAAY;QAC1C,UAAK,GAAL,KAAK,CAAsB;QACN,eAAU,GAAV,UAAU,CAAK;QACpC,SAAI,GAAJ,IAAI,CAAQ;QALzB,SAAI,GAAW,oBAAoB,CAAC,YAAY,CAAC;QAOzD,IAAI,kEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACtE,CAAC;IAES,qBAAqB;QAC9B,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAmB,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YAC9E,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO;YAC/C,MAAM,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;YAC9B,IAAI,GAAG,KAAK,IAAI;gBAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;;gBAClD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;;AAnBe,iCAAY,GAAW,wEAAuB,CAAC;wFADnD,oBAAoB,yDAIZ,8DAAa,yLAEb,sDAAW;qHANnB,oBAAoB,WAApB,oBAAoB;;;;;;;;;;;;;;;;;;;;;;ACRyB;AACY;AAChB;AACE;AACN;;;AAI3C,MAAM,sBAAuB,SAAQ,qEAAuB;IAIlE,YAA+C,OAAmB,EAC5C,KAA2B,EACN,UAAe,EACpC,IAAY;QACjC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAJwB,YAAO,GAAP,OAAO,CAAY;QAC5C,UAAK,GAAL,KAAK,CAAsB;QACN,eAAU,GAAV,UAAU,CAAK;QACpC,SAAI,GAAJ,IAAI,CAAQ;QALzB,SAAI,GAAW,sBAAsB,CAAC,YAAY,CAAC;QAO3D,IAAI,kEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACtE,CAAC;IAES,qBAAqB;QAC9B,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAmB,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YAC9E,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO;YAC/C,MAAM,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;YAC9B,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI;gBAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;;gBACxD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;;AAnBe,mCAAY,GAAW,0EAAyB,CAAC;4FADrD,sBAAsB,yDAId,gEAAe,yLAEf,sDAAW;uHANnB,sBAAsB,WAAtB,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTnC;;GAEG;AAEsC;AAEJ;AAEY;AACC;AACT;AAC+B;AAEd;AACZ;AACE;AACN;AACG;AACR;AAEQ;AACmB;AACI;AAEd;AACrB;AACJ;;;;;;;;;;;;;;;;ACxBtB,MAAM,WAAW;IAAxB;QAGQ,UAAK,GAA4B,EAAE,CAAC;IA0B5C,CAAC;IAxBA,IAAI,MAAM;QACT,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IACvC,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;IAChC,CAAC;IAED,GAAG,CAAC,KAAa;QAChB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,UAAU,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,GAAW,EAAE,KAAa;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACzB,CAAC;CAED;;;;;;;;;;;;;;;;;;;;AC/B4C;AAE0B;AAEhE,MAAM,uBAAuB,GAAW,eAAe,CAAC;AAExD,MAAM,mBAAmB;IAO/B,YAAY,IAAa;QALhB,eAAU,GAAoB,IAAI,yCAAO,EAAE,CAAC;QAC9C,UAAK,GAAQ,EAAE,CAAC;QAChB,eAAU,GAAY,IAAI,CAAC;QAIjC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,uBAAuB,CAAC;IAC7C,CAAC;IAED,IAAI,WAAW;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED,GAAG,CAAC,GAAW;QACd,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACvB,MAAM,mBAAmB,GAAG,IAAI,iFAAmB,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,mBAAmB,CAAC,SAAS,EAAE,EAAE;gBACpC,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;aAChB;YACD,IAAI,GAAG,mBAAmB,CAAC,YAAY,EAAE,CAAC;SAC1C;QACD,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB;QAC9C,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,IAAI,SAAS,EAAE;YACd,MAAM,mBAAmB,GAAG,IAAI,iFAAmB,CAAC,KAAK,CAAC,CAAC;YAC3D,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC,GAAG,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,GAAG,CAAC,GAAW;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;CAED;;;;;;;;;;;;;;;;;;;;;;;;;ACxDiE;AACiC;;;;AAM5F,MAAM,gBAAgB;IAS5B,YAAoB,EAAe,EAAU,QAA+B,EAAU,MAA2B;QAA7F,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAqB;IAAG,CAAC;IAErH,QAAQ;QAEP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,+DAAmB,CAAC;SAC9E,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;aAC/B,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;aAC7B,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,KAAK,EAAE,KAAK;QAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,4BAA4B;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IAElC,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;;gFAtCW,gBAAgB;8GAAhB,gBAAgB;QCR7B,0EAA+E;QAA3C,wIAAU,0CAA8B,IAAE;QAC7E,sEAAK;QACJ,yEAA4C;QAC7C,4DAAM;QACN,sEAAK;QACJ,4EAAsB;QAAA,iEAAM;QAAA,4DAAS;QACrC,4EAAwC;QAAlB,wIAAS,WAAO,IAAC;QAAC,gEAAK;QAAA,4DAAS;QACvD,4DAAM;QACP,4DAAO;QACP,gEAAI;QACJ,sEAAK;QACJ,4EAA6C;QAA1B,0LAAyB;QAA5C,4DAA6C;QAC7C,4EAA2C;QAAxB,wLAAuB;QAA1C,4DAA2C;QAC5C,4DAAM;QACN,iEAAI;QACJ,uEAAK;QACJ,uEAAK;QACJ,6EAA+D;QAAzC,yIAAS,kCAA8B,IAAC;QAAC,iFAAqB;QAAA,4DAAS;QAC9F,4DAAM;QACP,4DAAM;;QAnBA,+EAAkB;QAWJ,2DAAyB;QAAzB,oFAAyB;QACzB,0DAAuB;QAAvB,kFAAuB;;ADC1C;IADC,oDAAc,CAAC,UAAU,CAAC;qDACR;AAEnB;IADC,kDAAY,CAAC,UAAU,EAAE,eAAe,CAAC;mDACzB;;;;;;;;;;;;;;;;;;;;;;;;;AEdqC;;;AAMhD,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;QCP7B,0EAAS;QAAA,uDAA4B;QAAA,4DAAU;QAC/C,0EAAS;QAAA,uDAAgC;;QAAA,4DAAU;QACnD,0EAAS;QAAA,uDAAgC;QAAA,4DAAU;;QAF1C,0DAA4B;QAA5B,sGAA4B;QAC5B,0DAAgC;QAAhC,sKAAgC;QAChC,0DAAgC;QAAhC,0GAAgC;;ADOxC;IADC,oDAAc,CAAC,UAAU,EAAE,eAAe,CAAC;qDACzB;AAEnB;IADC,kDAAY,CAAC,UAAU,CAAC;mDACR;AAEjB;IADC,kDAAY,CAAC,QAAQ,CAAC;yDACA;;;;;;;;;;;;;;;;;;;;;;;;;;AEPjB,MAAM,aAAa;;0EAAb,aAAa;2GAAb,aAAa;QCN1B,yEAAQ;QACP,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACxB,4DAAS;QACT,0EAAS;QACR,sEAAqB;QACrB,gEAAI;QACJ,sEAAqB;QACtB,4DAAU;QACV,gEAAI;QACJ,mEAAe;QACf,gEAAI;QACJ,4EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;ACV2B;;AAOnD,MAAM,cAAc;;4EAAd,cAAc;4GAAd,cAAc;QCR3B,sEAAK;QACJ,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QAErB,0EAAS;QACR,sEAAK;QAAA,uDAA4B;QAAA,4DAAM;QACvC,sEAAK;QAAA,2EAAiF;QAA1C,kLAAyC;QAAhF,4DAAiF;QAAA,4DAAM;QAC7F,4DAAU;QACV,0EAAS;QACR,sEAAK;QAAA,wDAAgC;QAAA,4DAAM;QAC3C,uEAAK;QAAA,4EAAqF;QAA5C,qLAA2C;QAApF,4DAAqF;QAAA,4DAAM;QACjG,4DAAU;QACX,4DAAM;;QAPC,0DAA4B;QAA5B,sGAA4B;QACT,0DAAmB;QAAnB,gFAAmB;QAGtC,0DAAgC;QAAhC,0GAAgC;QACb,0DAAqB;QAArB,kFAAqB;;ADC9C;IADC,oDAAc,CAAC,UAAU,EAAE,eAAe,CAAC;mDACzB;AAEnB;IADC,kDAAY,CAAC,UAAU,CAAC;iDACR;;;;;;;;;;;;;;;;;;;;AEX4B;;;;AAYvC,MAAM,WAAW;IACvB,YAAY,OAA4B;IACxC,CAAC;IAED,MAAM,CAAC,OAAO;QACb,OAAO;YACN,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,EAAE;SACb,CAAC;IACH,CAAC;;sEATW,WAAW;wGAAX,WAAW;6GAFZ,EAAE,YALJ;YACR,wDAAY;SACZ;mIAKW,WAAW,mGANtB,wDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAL;AACA;AACF;AAET;AAEkB;AAC7B;AACS;;;;;;;AAmCpC,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFT,gEAAa;2GAdd;QACV;YACC,OAAO,EAAE,0DAAe;YACxB,UAAU,EAAE,CAAC,OAA4B,EAAE,EAAE;gBAC5C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,OAAO,GAAG,EAAE;oBACX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtB,CAAC,CAAC;YACH,CAAC;YACD,IAAI,EAAE,CAAC,qDAAmB,CAAC;YAC3B,KAAK,EAAE,IAAI;SACX;QACD,0HAA0H;KAC1H,YA1BQ;YACR,oEAAa;YACb,wDAAY;YACZ,6CAAO;YACP,sDAAW;YACX,6DAA2B,CAAC;gBAC3B,MAAM,EAAE,QAAQ;gBAChB,SAAS,EAAE,IAAI;aACf,CAAC;YACF,oDAAoD;YACpD,wCAAwC;YACxC,KAAK;SACL;mIAiBW,SAAS,sPA5BpB,oEAAa;QACb,wDAAY,8DAEZ,sDAAW;;;;;;;;;;;;;;;;;;AClBwC;AAG9C,MAAM,MAAM,GAAW;IAC7B;QACC,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACT;gBACC,IAAI,EAAE,EAAE;gBACR,YAAY,EAAE,GAAG,EAAE,CAAC,8IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;aACnE;YACD;gBACC,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,EAAE;aACd;SACD;KACD;CACD,CAAC;AAEK,MAAM,OAAO,GAAsC,iEAAoB,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AClBhF;AACmB;AACnB;;AAQtC,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;8GAFb,EAAE,YAHJ,EAAE,EACD,yDAAY,EAAE,uDAAW,EAAE,+DAAmB,EAAE,yDAAY;mIAI1D,YAAY,cAJd,yDAAY,EAAE,uDAAW,EAAE,+DAAmB,EAAE,yDAAY;;;;;;;;;;;;;;;;ACPvE,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfzB;AAGN;AACgB;AAEvD,IAAI,6EAAsB,EAAE;IAC3B,6DAAc,EAAE,CAAC;CACjB;AAED,wEAAwB,CAAC,eAAe,CAAC,kDAAS,CAAC;KACjD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","export const DefaultPrefix = 'ngx-webstorage';\nexport const DefaultSeparator = '|';\nexport const DefaultIsCaseSensitive = false;\n","export enum StorageStrategies {\n\tLocal = 'local_strategy',\n\tSession = 'session_strategy',\n\tInMemory = 'in_memory_strategy'\n}\n","import {FactoryProvider, InjectionToken} from '@angular/core';\nimport {WebStorage} from './interfaces/webStorage';\n\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\n\nexport function getLocalStorage() {\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\n}\n\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\n\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\n\nexport function getSessionStorage() {\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\n}\n\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\n","import {Injectable} from '@angular/core';\n\nexport interface StrategyCache {\n\t[key: string]: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class StrategyCacheService {\n\n\tprotected caches: { [name: string]: StrategyCache } = {};\n\n\tget(strategyName: string, key: string) {\n\t\treturn this.getCacheStore(strategyName)[key];\n\t}\n\n\tset(strategyName: string, key: string, value: any) {\n\t\tthis.getCacheStore(strategyName)[key] = value;\n\t}\n\n\tdel(strategyName: string, key: string) {\n\t\tdelete this.getCacheStore(strategyName)[key];\n\t}\n\n\tclear(strategyName: string) {\n\t\tthis.caches[strategyName] = {} as StrategyCache;\n\t}\n\n\tprotected getCacheStore(strategyName: string): StrategyCache {\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class AsyncStorage implements StorageService {\n\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): Observable<any> {\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\n\t\t);\n\t}\n\n\tstore(key: string, value: any): Observable<any> {\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\n\t}\n\n\tclear(key?: string): Observable<void> {\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\n\t}\n\n\tgetStrategyName(): string { return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {noop} from '../../helpers/noop';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class SyncStorage implements StorageService {\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): any {\n\t\tlet value: any;\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\n\t\treturn value;\n\t}\n\n\tstore(key: string, value: any): any {\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\n\t\treturn value;\n\t}\n\n\tclear(key?: string): void {\n\t\tif (key !== undefined)\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\n\t\telse this.strategy.clear().subscribe(noop);\n\t}\n\n\tgetStrategyName(): string {return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n\n}\n","import {StorageStrategies} from './constants/strategy';\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\n\nexport function LocalStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\n\t};\n}\n\nexport function SessionStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\n\t};\n}\n","import {WebStorage} from '../core/interfaces/webStorage';\n\nexport class CompatHelper {\n\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\n\t\tlet available = true;\n\t\ttry {\n\t\t\tif (typeof storage === 'object') {\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\n\t\t\t\tstorage.removeItem('test-storage');\n\t\t\t}\n\t\t\telse available = false;\n\t\t} catch(e) {\n\t\t\tavailable = false;\n\t\t}\n\t\treturn available;\n\t}\n\n\tstatic getUTCTime(): number {\n\t\tconst d = new Date()\n\t\treturn (d.getTime() + d.getTimezoneOffset()*60*1000)/1000;\n\t}\t\n\n}\n\n\n","import {StrategyIndex} from '../services/strategyIndex';\nimport {StorageStrategies} from '../constants/strategy';\nimport {StorageKeyManager} from './storageKeyManager';\nimport {noop} from './noop';\n\nexport class DecoratorBuilder {\n\t\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\n\t\tconst rawKey: string = key || propName;\n\t\tlet storageKey: string;\n\t\t\n\t\tObject.defineProperty(prototype, propName, {\n\t\t\tget: function() {\n\t\t\t\tlet value: any;\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\n\t\t\t\treturn value === undefined ? defaultValue : value;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfunction getKey() {\n\t\t\tif (storageKey !== undefined) return storageKey;\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\n\t\t}\n\t}\n}\n\n","export function noop() {}\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\nimport {NgxWebstorageConfiguration} from '../config';\n\nexport class StorageKeyManager {\n\t\n\tstatic prefix = DefaultPrefix;\n\tstatic separator = DefaultSeparator;\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\n\t\n\tstatic normalize(raw: string) {\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\n\t}\n\t\n\tstatic isNormalizedKey(key: string) {\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\n\t}\n\t\n\tstatic setPrefix(prefix: string) {\n\t\tStorageKeyManager.prefix = prefix;\n\t}\n\t\n\tstatic setSeparator(separator: string) {\n\t\tStorageKeyManager.separator = separator;\n\t}\n\t\n\tstatic setCaseSensitive(enable: boolean) {\n\t\tStorageKeyManager.isCaseSensitive = enable;\n\t}\n\t\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\n\t\tif ('separator' in config) this.setSeparator(config.separator);\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\n\t}\n}\n","import {CompatHelper} from './compat';\n\nexport class ValueWithExpiration {\n\tpublic _d: any;\n\tconstructor(public v: any) {\n\t\tif (v._e_in) {\n\t\t\tthis._d = v;\n\t\t} else {\n\t\t\tthis._d = {'_v': v};\n\t\t}\n\t}\n\n\tsetExpiration(expiresIn: number): void {\n\t\tthis._d._e_in = CompatHelper.getUTCTime() + (expiresIn * 1000);\n\t}\n\n\tisExpired(): boolean {\n\t\treturn this._d._e_in < CompatHelper.getUTCTime();\n\t}\n\n\tgetValueForStorage(): any {\n\t\treturn this._d;\n\t}\n\n\tgetRealValue(): any {\n\t\treturn this._d._v;\n\t}\n\n}\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders<NgxWebstorageModule> {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class LocalStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\n\treturn new SyncStorage(strategy);\n}\n\nexport const LocalStorageServiceProvider: FactoryProvider = {\n\tprovide: LocalStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class SessionStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\n\treturn new SyncStorage(strategy);\n}\n\nexport const SessionStorageServiceProvider: FactoryProvider = {\n\tprovide: SessionStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Subject} from 'rxjs';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {STORAGE_STRATEGIES} from '../strategies';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport const InvalidStrategyError = 'invalid_strategy';\n\n@Injectable({providedIn: 'root'})\nexport class StrategyIndex {\n\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\n\treadonly registration$: Subject<string> = new Subject();\n\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\n\t\tif (!strategies) strategies = [];\n\t\tthis.strategies = strategies.reverse()\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\n\t\t\t.filter((index: number) => index !== null)\n\t\t\t.map((index: number) => strategies[index]);\n\t}\n\n\tstatic get(name: string): StorageStrategy<any> {\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\n\t\tlet strategy: StorageStrategy<any> = this.index[name];\n\t\tif (!strategy.isAvailable) {\n\t\t\tstrategy = this.index[StorageStrategies.InMemory];\n\t\t}\n\t\treturn strategy;\n\t}\n\n\tstatic set(name: string, strategy): void {\n\t\tthis.index[name] = strategy;\n\t}\n\n\tstatic clear(name?: string): void {\n\t\tif (name !== undefined) delete this.index[name];\n\t\telse this.index = {};\n\t}\n\n\tstatic isStrategyRegistered(name: string): boolean {\n\t\treturn name in this.index;\n\t}\n\n\tstatic hasRegistredStrategies(): boolean {\n\t\treturn Object.keys(this.index).length > 0;\n\t}\n\n\tpublic getStrategy(name: string): StorageStrategy<any> {\n\t\treturn StrategyIndex.get(name);\n\t}\n\n\tpublic indexStrategies() {\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\n\t}\n\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\n\t\tthis.register(name, strategy, overrideIfExists);\n\t\treturn strategy;\n\t}\n\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\n\t\t\tStrategyIndex.set(name, strategy);\n\t\t\tthis.registration$.next(name);\n\t\t}\n\t}\n\n}\n\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {CompatHelper} from '../helpers/compat';\nimport {ValueWithExpiration} from '../helpers/valueWithExpiration';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\n\treadonly keyChanges: Subject<string> = new Subject();\n\tabstract readonly name: string;\n\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\n\n\tprotected _isAvailable: boolean;\n\n\tget isAvailable(): boolean {\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\n\t\treturn this._isAvailable;\n\t}\n\t\n\tget(key: string): Observable<any> {\n\t\tlet data: any = this.cache.get(this.name, key);\n\t\tif (data && data._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(data);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t}\n\t\tif (data !== undefined) return of(data);\n\n\t\ttry {\n\t\t\tconst item: any = this.storage.getItem(key);\n\t\t\tif (item !== null) {\n\t\t\t\tconst data1 = JSON.parse(item);\n\t\t\t\tif (data1 && data1._e_in) {\n\t\t\t\t\tconst valueWithExpiration = new ValueWithExpiration(data1);\n\t\t\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t\t\t} else {\n\t\t\t\t\tdata = data1;\n\t\t\t\t}\n\t\t\t\tthis.cache.set(this.name, key, data1);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.warn(err);\n\t\t}\n\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tconst data = JSON.stringify(value);\n\t\tthis.storage.setItem(key, data);\n\t\tthis.cache.set(this.name, key, v);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.storage.removeItem(key);\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.storage.clear();\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {CompatHelper} from '../helpers/compat';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {StorageStrategies} from '../constants/strategy';\nimport {Inject, Injectable} from '@angular/core';\nimport {ValueWithExpiration} from '../helpers/valueWithExpiration';\n\n@Injectable()\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\n\treadonly keyChanges: Subject<string> = new Subject();\n\tisAvailable: boolean = true;\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\n\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\n\n\tget(key: string): Observable<any> {\n\t\tlet d =this.cache.get(this.name, key);\n\t\tif (d && d._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(d);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\td = valueWithExpiration.getRealValue();\n\t\t}\n\t\treturn of(d);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tthis.cache.set(this.name, key, v);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {InjectionToken, Provider} from '@angular/core';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {LocalStorageStrategy} from './localStorage';\nimport {SessionStorageStrategy} from './sessionStorage';\nimport {InMemoryStorageStrategy} from './inMemory';\n\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\n\nexport const Strategies: Provider[] = [\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\n];\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Local;\n\treadonly name: string = LocalStorageStrategy.strategyName;\n\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {SESSION_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Session;\n\treadonly name: string = SessionStorageStrategy.strategyName;\n\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","/*\n * Public API Surface of ngx-webstorage\n */\n\nexport * from './lib/constants/strategy';\n\nexport * from './lib/helpers/compat';\n\nexport * from './lib/core/templates/syncStorage';\nexport * from './lib/core/templates/asyncStorage';\nexport * from './lib/core/strategyCache';\nexport {LOCAL_STORAGE, SESSION_STORAGE} from './lib/core/nativeStorage';\n\nexport {STORAGE_STRATEGIES} from './lib/strategies/index';\nexport * from './lib/strategies/localStorage';\nexport * from './lib/strategies/sessionStorage';\nexport * from './lib/strategies/inMemory';\nexport * from './stubs/storageStrategy.stub';\nexport * from './stubs/storage.stub';\n\nexport * from './lib/services/strategyIndex';\nexport {LocalStorageService} from './lib/services/localStorage';\nexport {SessionStorageService} from './lib/services/sessionStorage';\n\nexport * from './lib/core/interfaces/storageStrategy';\nexport * from './lib/decorators';\nexport * from './lib/module';\n\n\n\n\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\n\nexport class StorageStub implements WebStorage {\n\t[name: string]: any;\n\n\tpublic store: { [prop: string]: any } = {};\n\n\tget length(): number {\n\t\treturn Object.keys(this.store).length;\n\t}\n\n\tclear(): void {\n\t\tthis.store = {};\n\t}\n\n\tgetItem(key: string): string | null {\n\t\treturn this.store[key] || null;\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string): void {\n\t\tdelete this.store[key];\n\t}\n\n\tsetItem(key: string, value: string): void {\n\t\tthis.store[key] = value;\n\t}\n\n}\n","import {Observable, of, Subject} from 'rxjs';\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\nimport {ValueWithExpiration} from '../lib/helpers/valueWithExpiration';\n\nexport const StorageStrategyStubName: string = 'stub_strategy';\n\nexport class StorageStrategyStub implements StorageStrategy<any> {\n\n\treadonly keyChanges: Subject<string> = new Subject();\n\tpublic store: any = {};\n\tpublic _available: boolean = true;\n\treadonly name: string;\n\n\tconstructor(name?: string) {\n\t\tthis.name = name || StorageStrategyStubName;\n\t}\n\n\tget isAvailable(): boolean {\n\t\treturn this._available;\n\t}\n\n\tget(key: string): Observable<any> {\n\t\tlet data = this.store[key];\n\t\tif (data && data._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(data);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t}\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tthis.store[key] = v;\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tdelete this.store[key];\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.store = {};\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LocalStorage, LocalStorageService, SessionStorage, SessionStorageService} from '../../lib';\n\n@Component({\n\tselector: 'app-form',\n\ttemplateUrl: './template.html'\n})\nexport class AppFormComponent implements OnInit {\n\n\tform: FormGroup;\n\n\t@SessionStorage('variable')\n\tpublic sessionBind;\n\t@LocalStorage('variable', 'default value')\n\tpublic localBind;\n\n\tconstructor(private fb: FormBuilder, private sessionS: SessionStorageService, private localS: LocalStorageService) {}\n\n\tngOnInit() {\n\n\t\tthis.localS.store('object', {prop: 0});\n\n\t\tthis.form = this.fb.group({\n\t\t\ttext: this.fb.control(this.sessionS.retrieve('variable'), Validators.required)\n\t\t});\n\t\tthis.sessionS.observe('variable')\n\t\t\t.subscribe((data) => console.log('session variable changed : ', data));\n\t\tthis.localS.observe('variable')\n\t\t\t.subscribe((data) => console.log('local variable changed : ', data));\n\t}\n\n\tsubmit(value, valid) {\n\t\tthis.sessionS.store('variable', value.text);\n\t}\n\n\trandomizeBoundObjectProperty() {\n\t\tconst obj = this.localS.retrieve('object');\n\t\tconsole.log(obj);\n\t\tobj.prop = Math.random() * 1000 | 0;\n\t\tthis.localS.store('object', obj);\n\n\t}\n\n\tclear() {\n\t\tthis.sessionS.clear();\n\t}\n\n}\n","<form [formGroup]=\"form\" novalidate (submit)=\"submit(form.value, form.valid);\">\n\t<div>\n\t\t<textarea formControlName=\"text\"></textarea>\n\t</div>\n\t<div>\n\t\t<button type=\"submit\">submit</button>\n\t\t<button type=\"button\" (click)=\"clear()\">clear</button>\n\t</div>\n</form>\n<hr>\n<div>\n\t<input type=\"text\" [(ngModel)]=\"sessionBind\">\n\t<input type=\"text\" [(ngModel)]=\"localBind\">\n</div>\n<hr>\n<div>\n\t<div>\n\t\t<button type=\"button\" (click)=\"randomizeBoundObjectProperty()\">randomize object prop</button>\n\t</div>\n</div>\n","import {Component} from '@angular/core';\nimport {LocalStorage, SessionStorage} from '../../lib';\n\n@Component({\n\tselector: 'app-view',\n\ttemplateUrl: './template.html',\n})\nexport class AppViewComponent {\n\t@SessionStorage('variable', 'default value')\n\tpublic sessionBind;\n\t@LocalStorage('variable')\n\tpublic localBind;\n\t@LocalStorage('object')\n\tpublic objectLocalBind;\n}\n","<article>local storage: {{localBind}}</article>\n<article>object: {{objectLocalBind|json}}</article>\n<article>session storage: {{sessionBind}}</article>\n","import {Component} from '@angular/core';\n\n@Component({\n\tselector: 'root',\n\ttemplateUrl: './template.html',\n})\nexport class RootComponent {\n\n}\n","<header>\n\t<h1>NGX WEBSTORAGE</h1>\n</header>\n<section>\n\t<app-view></app-view>\n\t<hr>\n\t<app-form></app-form>\n</section>\n<hr>\n<eager></eager>\n<hr>\n<router-outlet></router-outlet>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {LocalStorage, SessionStorage} from '../../../lib';\n\n@Component({\n\tselector: 'eager',\n\ttemplateUrl: './template.html',\n\t//changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EagerComponent {\n\t@SessionStorage('variable', 'default value')\n\tpublic sessionBind;\n\t@LocalStorage('variable')\n\tpublic localBind;\n}","<div>\n\t<h5>Eager module</h5>\n\n\t<article>\n\t\t<div>local storage: {{localBind}}</div>\n\t\t<div><input type=\"text\" [value]=\"localBind\" (input)=\"localBind = $event.target.value\"></div>\n\t</article>\n\t<article>\n\t\t<div>session storage: {{sessionBind}}</div>\n\t\t<div><input type=\"text\" [value]=\"sessionBind\" (input)=\"sessionBind = $event.target.value\"></div>\n\t</article>\n</div>","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {SharedModule} from '../shared/module';\nimport {Components} from './components';\nimport {LocalStorageService, SessionStorageService, StrategyIndex} from '../lib';\n\n@NgModule({\n\timports: [\n\t\tSharedModule,\n\t],\n\texports: [...Components],\n\tdeclarations: [...Components],\n\tproviders: []\n})\nexport class EagerModule {\n\tconstructor(storage: LocalStorageService) {\n\t}\n\n\tstatic forRoot(): ModuleWithProviders<EagerModule> {\n\t\treturn {\n\t\t\tngModule: EagerModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n","export * from '../../projects/ngx-webstorage/src/public_api';\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {RootComponent} from './_components/root/root';\nimport {Components} from './_components';\nimport {SharedModule} from './shared/module';\n\nimport {LocalStorageService, NgxWebstorageModule} from './lib';\nimport {Routing} from './routing';\nimport {EagerModule} from './eager/module';\n\n@NgModule({\n\tdeclarations: [\n\t\t...Components\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tSharedModule,\n\t\tRouting,\n\t\tEagerModule,\n\t\tNgxWebstorageModule.forRoot({\n\t\t\tprefix: 'prefix',\n\t\t\tseparator: '--'\n\t\t}),\n\t\t// NgxWebstorageCrossStorageStrategyModule.forRoot({\n\t\t// \thost: 'http://localhost.crosstorage'\n\t\t// })\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INITIALIZER,\n\t\t\tuseFactory: (session: LocalStorageService) => {\n\t\t\t\tconsole.log('app init');\n\t\t\t\treturn () => {\n\t\t\t\t\tconsole.log(session);\n\t\t\t\t};\n\t\t\t},\n\t\t\tdeps: [LocalStorageService],\n\t\t\tmulti: true\n\t\t},\n\t\t//{provide: STORAGE_STRATEGIES, useFactory: () => new StorageStrategyStub(LocalStorageStrategy.strategyName), multi: true}\n\t],\n\tbootstrap: [RootComponent]\n})\nexport class AppModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {ModuleWithProviders} from '@angular/core';\n\nexport const ROUTES: Routes = [\n\t{\n\t\tpath: '',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tloadChildren: () => import('./lazy/module').then(m => m.LazyModule)\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '**',\n\t\t\t\tredirectTo: ''\n\t\t\t}\n\t\t]\n\t}\n];\n\nexport const Routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' });\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n\timports: [],\n\texports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n\tdeclarations: [],\n\tproviders: [],\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\t.catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}