{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///projects/ngx-webstorage/src/lib/constants/config.ts","webpack:///projects/ngx-webstorage/src/lib/constants/strategy.ts","webpack:///projects/ngx-webstorage/src/lib/core/nativeStorage.ts","webpack:///projects/ngx-webstorage/src/lib/core/strategyCache.ts","webpack:///projects/ngx-webstorage/src/lib/core/templates/asyncStorage.ts","webpack:///projects/ngx-webstorage/src/lib/core/templates/syncStorage.ts","webpack:///projects/ngx-webstorage/src/lib/decorators.ts","webpack:///projects/ngx-webstorage/src/lib/helpers/compat.ts","webpack:///projects/ngx-webstorage/src/lib/helpers/decoratorBuilder.ts","webpack:///projects/ngx-webstorage/src/lib/helpers/noop.ts","webpack:///projects/ngx-webstorage/src/lib/helpers/storageKeyManager.ts","webpack:///projects/ngx-webstorage/src/lib/helpers/valueWithExpiration.ts","webpack:///projects/ngx-webstorage/src/lib/module.ts","webpack:///projects/ngx-webstorage/src/lib/services/index.ts","webpack:///projects/ngx-webstorage/src/lib/services/localStorage.ts","webpack:///projects/ngx-webstorage/src/lib/services/sessionStorage.ts","webpack:///projects/ngx-webstorage/src/lib/services/strategyIndex.ts","webpack:///projects/ngx-webstorage/src/lib/strategies/baseSyncStorage.ts","webpack:///projects/ngx-webstorage/src/lib/strategies/inMemory.ts","webpack:///projects/ngx-webstorage/src/lib/strategies/index.ts","webpack:///projects/ngx-webstorage/src/lib/strategies/localStorage.ts","webpack:///projects/ngx-webstorage/src/lib/strategies/sessionStorage.ts","webpack:///projects/ngx-webstorage/src/public_api.ts","webpack:///projects/ngx-webstorage/src/stubs/storage.stub.ts","webpack:///projects/ngx-webstorage/src/stubs/storageStrategy.stub.ts","webpack:///src/app/_components/appForm/appForm.ts","webpack:///src/app/_components/appForm/template.html","webpack:///src/app/_components/appView/appView.ts","webpack:///src/app/_components/appView/template.html","webpack:///src/app/_components/root/root.ts","webpack:///src/app/_components/root/template.html","webpack:///src/app/eager/components/eager/eager.ts","webpack:///src/app/eager/components/eager/template.html","webpack:///src/app/eager/module.ts","webpack:///src/app/module.ts","webpack:///src/app/routing.ts","webpack:///src/app/shared/module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","DefaultPrefix","DefaultSeparator","DefaultIsCaseSensitive","StorageStrategies","LOCAL_STORAGE","InjectionToken","getLocalStorage","window","localStorage","LocalStorageProvider","provide","useFactory","SESSION_STORAGE","getSessionStorage","sessionStorage","SessionStorageProvider","StrategyCacheService","caches","strategyName","key","getCacheStore","value","AsyncStorage","strategy","get","StorageKeyManager","pipe","map","set","undefined","del","clear","name","keyChanges","filter","changed","switchMap","distinctUntilChanged","shareReplay","SyncStorage","subscribe","result","noop","LocalStorage","defaultValue","prototype","propName","DecoratorBuilder","SessionStorage","CompatHelper","storage","available","setItem","removeItem","d","Date","getTime","getTimezoneOffset","rawKey","storageKey","Object","defineProperty","StrategyIndex","getKey","raw","isCaseSensitive","toLowerCase","prefix","separator","indexOf","enable","config","setPrefix","setSeparator","setCaseSensitive","caseSensitive","ValueWithExpiration","v","_e_in","_d","expiresIn","_v","LIB_CONFIG","appInit","index","indexStrategies","NgxWebstorageModule","console","error","ngModule","providers","useValue","Services","Strategies","APP_INITIALIZER","deps","multi","LocalStorageServiceProvider","SessionStorageServiceProvider","LocalStorageService","buildService","indexStrategy","SessionStorageService","InvalidStrategyError","strategies","registration$","Subject","reverse","arr","forEach","register","overrideIfExists","isStrategyRegistered","find","next","isAvailable","length","STORAGE_STRATEGIES","BaseSyncStorageStrategy","cache","_isAvailable","data","valueWithExpiration","isExpired","of","getRealValue","item","getItem","data1","JSON","parse","err","warn","setExpiration","getValueForStorage","stringify","InMemoryStorageStrategy","useClass","LocalStorageStrategy","SessionStorageStrategy","platformId","zone","isPlatformBrowser","listenExternalChanges","addEventListener","event","run","storageArea","PLATFORM_ID","StorageStub","store","StorageStrategyStubName","StorageStrategyStub","_available","AppFormComponent","fb","sessionS","localS","prop","form","group","text","control","retrieve","Validators","observe","log","valid","obj","Math","random","submit","randomizeBoundObjectProperty","AppViewComponent","RootComponent","EagerComponent","EagerModule","SharedModule","AppModule","session","BrowserModule","Routing","ROUTES","path","children","loadChildren","m","LazyModule","redirectTo","RouterModule","relativeLinkResolution","CommonModule","FormsModule","ReactiveFormsModule","environment","production","enableProdMode","platformBrowser","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","export const DefaultPrefix = 'ngx-webstorage';\nexport const DefaultSeparator = '|';\nexport const DefaultIsCaseSensitive = false;\n","export enum StorageStrategies {\n\tLocal = 'local_strategy',\n\tSession = 'session_strategy',\n\tInMemory = 'in_memory_strategy'\n}\n","import {FactoryProvider, InjectionToken} from '@angular/core';\nimport {WebStorage} from './interfaces/webStorage';\n\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\n\nexport function getLocalStorage() {\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\n}\n\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\n\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\n\nexport function getSessionStorage() {\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\n}\n\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\n","import {Injectable} from '@angular/core';\n\nexport interface StrategyCache {\n\t[key: string]: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class StrategyCacheService {\n\n\tprotected caches: { [name: string]: StrategyCache } = {};\n\n\tget(strategyName: string, key: string) {\n\t\treturn this.getCacheStore(strategyName)[key];\n\t}\n\n\tset(strategyName: string, key: string, value: any) {\n\t\tthis.getCacheStore(strategyName)[key] = value;\n\t}\n\n\tdel(strategyName: string, key: string) {\n\t\tdelete this.getCacheStore(strategyName)[key];\n\t}\n\n\tclear(strategyName: string) {\n\t\tthis.caches[strategyName] = {} as StrategyCache;\n\t}\n\n\tprotected getCacheStore(strategyName: string): StrategyCache {\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class AsyncStorage implements StorageService {\n\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): Observable<any> {\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\n\t\t);\n\t}\n\n\tstore(key: string, value: any): Observable<any> {\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\n\t}\n\n\tclear(key?: string): Observable<void> {\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\n\t}\n\n\tgetStrategyName(): string { return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {noop} from '../../helpers/noop';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class SyncStorage implements StorageService {\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): any {\n\t\tlet value: any;\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\n\t\treturn value;\n\t}\n\n\tstore(key: string, value: any): any {\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\n\t\treturn value;\n\t}\n\n\tclear(key?: string): void {\n\t\tif (key !== undefined)\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\n\t\telse this.strategy.clear().subscribe(noop);\n\t}\n\n\tgetStrategyName(): string {return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n\n}\n","import {StorageStrategies} from './constants/strategy';\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\n\nexport function LocalStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\n\t};\n}\n\nexport function SessionStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\n\t};\n}\n","import {WebStorage} from '../core/interfaces/webStorage';\n\nexport class CompatHelper {\n\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\n\t\tlet available = true;\n\t\ttry {\n\t\t\tif (typeof storage === 'object') {\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\n\t\t\t\tstorage.removeItem('test-storage');\n\t\t\t}\n\t\t\telse available = false;\n\t\t} catch(e) {\n\t\t\tavailable = false;\n\t\t}\n\t\treturn available;\n\t}\n\n\tstatic getUTCTime(): number {\n\t\tconst d = new Date()\n\t\treturn (d.getTime() + d.getTimezoneOffset()*60*1000)/1000;\n\t}\t\n\n}\n\n\n","import {StrategyIndex} from '../services/strategyIndex';\nimport {StorageStrategies} from '../constants/strategy';\nimport {StorageKeyManager} from './storageKeyManager';\nimport {noop} from './noop';\n\nexport class DecoratorBuilder {\n\t\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\n\t\tconst rawKey: string = key || propName;\n\t\tlet storageKey: string;\n\t\t\n\t\tObject.defineProperty(prototype, propName, {\n\t\t\tget: function() {\n\t\t\t\tlet value: any;\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\n\t\t\t\treturn value === undefined ? defaultValue : value;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfunction getKey() {\n\t\t\tif (storageKey !== undefined) return storageKey;\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\n\t\t}\n\t}\n}\n\n","export function noop() {}\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\nimport {NgxWebstorageConfiguration} from '../config';\n\nexport class StorageKeyManager {\n\t\n\tstatic prefix = DefaultPrefix;\n\tstatic separator = DefaultSeparator;\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\n\t\n\tstatic normalize(raw: string) {\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\n\t}\n\t\n\tstatic isNormalizedKey(key: string) {\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\n\t}\n\t\n\tstatic setPrefix(prefix: string) {\n\t\tStorageKeyManager.prefix = prefix;\n\t}\n\t\n\tstatic setSeparator(separator: string) {\n\t\tStorageKeyManager.separator = separator;\n\t}\n\t\n\tstatic setCaseSensitive(enable: boolean) {\n\t\tStorageKeyManager.isCaseSensitive = enable;\n\t}\n\t\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\n\t\tif ('separator' in config) this.setSeparator(config.separator);\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\n\t}\n}\n","import {CompatHelper} from './compat';\n\nexport class ValueWithExpiration {\n\tpublic _d: any;\n\tconstructor(public v: any) {\n\t\tif (v._e_in) {\n\t\t\tthis._d = v;\n\t\t} else {\n\t\t\tthis._d = {'_v': v};\n\t\t}\n\t}\n\n\tsetExpiration(expiresIn: number): void {\n\t\tthis._d._e_in = CompatHelper.getUTCTime() + (expiresIn * 1000);\n\t}\n\n\tisExpired(): boolean {\n\t\treturn this._d._e_in < CompatHelper.getUTCTime();\n\t}\n\n\tgetValueForStorage(): any {\n\t\treturn this._d;\n\t}\n\n\tgetRealValue(): any {\n\t\treturn this._d._v;\n\t}\n\n}\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders<NgxWebstorageModule> {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class LocalStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\n\treturn new SyncStorage(strategy);\n}\n\nexport const LocalStorageServiceProvider: FactoryProvider = {\n\tprovide: LocalStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class SessionStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\n\treturn new SyncStorage(strategy);\n}\n\nexport const SessionStorageServiceProvider: FactoryProvider = {\n\tprovide: SessionStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Subject} from 'rxjs';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {STORAGE_STRATEGIES} from '../strategies';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport const InvalidStrategyError = 'invalid_strategy';\n\n@Injectable({providedIn: 'root'})\nexport class StrategyIndex {\n\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\n\treadonly registration$: Subject<string> = new Subject();\n\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\n\t\tif (!strategies) strategies = [];\n\t\tthis.strategies = strategies.reverse()\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\n\t\t\t.filter((index: number) => index !== null)\n\t\t\t.map((index: number) => strategies[index]);\n\t}\n\n\tstatic get(name: string): StorageStrategy<any> {\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\n\t\tlet strategy: StorageStrategy<any> = this.index[name];\n\t\tif (!strategy.isAvailable) {\n\t\t\tstrategy = this.index[StorageStrategies.InMemory];\n\t\t}\n\t\treturn strategy;\n\t}\n\n\tstatic set(name: string, strategy): void {\n\t\tthis.index[name] = strategy;\n\t}\n\n\tstatic clear(name?: string): void {\n\t\tif (name !== undefined) delete this.index[name];\n\t\telse this.index = {};\n\t}\n\n\tstatic isStrategyRegistered(name: string): boolean {\n\t\treturn name in this.index;\n\t}\n\n\tstatic hasRegistredStrategies(): boolean {\n\t\treturn Object.keys(this.index).length > 0;\n\t}\n\n\tpublic getStrategy(name: string): StorageStrategy<any> {\n\t\treturn StrategyIndex.get(name);\n\t}\n\n\tpublic indexStrategies() {\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\n\t}\n\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\n\t\tthis.register(name, strategy, overrideIfExists);\n\t\treturn strategy;\n\t}\n\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\n\t\t\tStrategyIndex.set(name, strategy);\n\t\t\tthis.registration$.next(name);\n\t\t}\n\t}\n\n}\n\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {CompatHelper} from '../helpers/compat';\nimport {ValueWithExpiration} from '../helpers/valueWithExpiration';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\n\treadonly keyChanges: Subject<string> = new Subject();\n\tabstract readonly name: string;\n\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\n\n\tprotected _isAvailable: boolean;\n\n\tget isAvailable(): boolean {\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\n\t\treturn this._isAvailable;\n\t}\n\t\n\tget(key: string): Observable<any> {\n\t\tlet data: any = this.cache.get(this.name, key);\n\t\tif (data && data._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(data);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t}\n\t\tif (data !== undefined) return of(data);\n\n\t\ttry {\n\t\t\tconst item: any = this.storage.getItem(key);\n\t\t\tif (item !== null) {\n\t\t\t\tconst data1 = JSON.parse(item);\n\t\t\t\tif (data1 && data1._e_in) {\n\t\t\t\t\tconst valueWithExpiration = new ValueWithExpiration(data1);\n\t\t\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t\t\t} else {\n\t\t\t\t\tdata = data1;\n\t\t\t\t}\n\t\t\t\tthis.cache.set(this.name, key, data1);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.warn(err);\n\t\t}\n\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tconst data = JSON.stringify(value);\n\t\tthis.storage.setItem(key, data);\n\t\tthis.cache.set(this.name, key, v);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.storage.removeItem(key);\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.storage.clear();\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {CompatHelper} from '../helpers/compat';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {StorageStrategies} from '../constants/strategy';\nimport {Inject, Injectable} from '@angular/core';\nimport {ValueWithExpiration} from '../helpers/valueWithExpiration';\n\n@Injectable()\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\n\treadonly keyChanges: Subject<string> = new Subject();\n\tisAvailable: boolean = true;\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\n\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\n\n\tget(key: string): Observable<any> {\n\t\tlet d =this.cache.get(this.name, key);\n\t\tif (d && d._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(d);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\td = valueWithExpiration.getRealValue();\n\t\t}\n\t\treturn of(d);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tthis.cache.set(this.name, key, v);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {InjectionToken, Provider} from '@angular/core';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {LocalStorageStrategy} from './localStorage';\nimport {SessionStorageStrategy} from './sessionStorage';\nimport {InMemoryStorageStrategy} from './inMemory';\n\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\n\nexport const Strategies: Provider[] = [\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\n];\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Local;\n\treadonly name: string = LocalStorageStrategy.strategyName;\n\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {SESSION_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Session;\n\treadonly name: string = SessionStorageStrategy.strategyName;\n\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","/*\n * Public API Surface of ngx-webstorage\n */\n\nexport * from './lib/constants/strategy';\n\nexport * from './lib/helpers/compat';\n\nexport * from './lib/core/templates/syncStorage';\nexport * from './lib/core/templates/asyncStorage';\nexport * from './lib/core/strategyCache';\nexport {LOCAL_STORAGE, SESSION_STORAGE} from './lib/core/nativeStorage';\n\nexport {STORAGE_STRATEGIES} from './lib/strategies/index';\nexport * from './lib/strategies/localStorage';\nexport * from './lib/strategies/sessionStorage';\nexport * from './lib/strategies/inMemory';\nexport * from './stubs/storageStrategy.stub';\nexport * from './stubs/storage.stub';\n\nexport * from './lib/services/strategyIndex';\nexport {LocalStorageService} from './lib/services/localStorage';\nexport {SessionStorageService} from './lib/services/sessionStorage';\n\nexport * from './lib/core/interfaces/storageStrategy';\nexport * from './lib/decorators';\nexport * from './lib/module';\n\n\n\n\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\n\nexport class StorageStub implements WebStorage {\n\t[name: string]: any;\n\n\tpublic store: { [prop: string]: any } = {};\n\n\tget length(): number {\n\t\treturn Object.keys(this.store).length;\n\t}\n\n\tclear(): void {\n\t\tthis.store = {};\n\t}\n\n\tgetItem(key: string): string | null {\n\t\treturn this.store[key] || null;\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string): void {\n\t\tdelete this.store[key];\n\t}\n\n\tsetItem(key: string, value: string): void {\n\t\tthis.store[key] = value;\n\t}\n\n}\n","import {Observable, of, Subject} from 'rxjs';\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\nimport {ValueWithExpiration} from '../lib/helpers/valueWithExpiration';\n\nexport const StorageStrategyStubName: string = 'stub_strategy';\n\nexport class StorageStrategyStub implements StorageStrategy<any> {\n\n\treadonly keyChanges: Subject<string> = new Subject();\n\tpublic store: any = {};\n\tpublic _available: boolean = true;\n\treadonly name: string;\n\n\tconstructor(name?: string) {\n\t\tthis.name = name || StorageStrategyStubName;\n\t}\n\n\tget isAvailable(): boolean {\n\t\treturn this._available;\n\t}\n\n\tget(key: string): Observable<any> {\n\t\tlet data = this.store[key];\n\t\tif (data && data._e_in) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(data);\n\t\t\tif (valueWithExpiration.isExpired()) {\n\t\t\t\treturn of(null);\n\t\t\t}\n\t\t\tdata = valueWithExpiration.getRealValue();\n\t\t}\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any, expiresIn?: number): Observable<any> {\n\t\tlet v = value;\n\t\tif (expiresIn) {\n\t\t\tconst valueWithExpiration = new ValueWithExpiration(value);\n\t\t\tvalueWithExpiration.setExpiration(expiresIn);\n\t\t\tv = valueWithExpiration.getValueForStorage();\n\t\t}\n\t\tthis.store[key] = v;\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tdelete this.store[key];\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.store = {};\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LocalStorage, LocalStorageService, SessionStorage, SessionStorageService} from '../../lib';\n\n@Component({\n\tselector: 'app-form',\n\ttemplateUrl: './template.html'\n})\nexport class AppFormComponent implements OnInit {\n\n\tform: FormGroup;\n\n\t@SessionStorage('variable')\n\tpublic sessionBind;\n\t@LocalStorage('variable', 'default value')\n\tpublic localBind;\n\n\tconstructor(private fb: FormBuilder, private sessionS: SessionStorageService, private localS: LocalStorageService) {}\n\n\tngOnInit() {\n\n\t\tthis.localS.store('object', {prop: 0});\n\n\t\tthis.form = this.fb.group({\n\t\t\ttext: this.fb.control(this.sessionS.retrieve('variable'), Validators.required)\n\t\t});\n\t\tthis.sessionS.observe('variable')\n\t\t\t.subscribe((data) => console.log('session variable changed : ', data));\n\t\tthis.localS.observe('variable')\n\t\t\t.subscribe((data) => console.log('local variable changed : ', data));\n\t}\n\n\tsubmit(value, valid) {\n\t\tthis.sessionS.store('variable', value.text);\n\t}\n\n\trandomizeBoundObjectProperty() {\n\t\tconst obj = this.localS.retrieve('object');\n\t\tconsole.log(obj);\n\t\tobj.prop = Math.random() * 1000 | 0;\n\t\tthis.localS.store('object', obj);\n\n\t}\n\n\tclear() {\n\t\tthis.sessionS.clear();\n\t}\n\n}\n","<form [formGroup]=\"form\" novalidate (submit)=\"submit(form.value, form.valid);\">\n\t<div>\n\t\t<textarea formControlName=\"text\"></textarea>\n\t</div>\n\t<div>\n\t\t<button type=\"submit\">submit</button>\n\t\t<button type=\"button\" (click)=\"clear()\">clear</button>\n\t</div>\n</form>\n<hr>\n<div>\n\t<input type=\"text\" [(ngModel)]=\"sessionBind\">\n\t<input type=\"text\" [(ngModel)]=\"localBind\">\n</div>\n<hr>\n<div>\n\t<div>\n\t\t<button type=\"button\" (click)=\"randomizeBoundObjectProperty()\">randomize object prop</button>\n\t</div>\n</div>\n","import {Component} from '@angular/core';\nimport {LocalStorage, SessionStorage} from '../../lib';\n\n@Component({\n\tselector: 'app-view',\n\ttemplateUrl: './template.html',\n})\nexport class AppViewComponent {\n\t@SessionStorage('variable', 'default value')\n\tpublic sessionBind;\n\t@LocalStorage('variable')\n\tpublic localBind;\n\t@LocalStorage('object')\n\tpublic objectLocalBind;\n}\n","<article>local storage: {{localBind}}</article>\n<article>object: {{objectLocalBind|json}}</article>\n<article>session storage: {{sessionBind}}</article>\n","import {Component} from '@angular/core';\n\n@Component({\n\tselector: 'root',\n\ttemplateUrl: './template.html',\n})\nexport class RootComponent {\n\n}\n","<header>\n\t<h1>NGX WEBSTORAGE</h1>\n</header>\n<section>\n\t<app-view></app-view>\n\t<hr>\n\t<app-form></app-form>\n</section>\n<hr>\n<eager></eager>\n<hr>\n<router-outlet></router-outlet>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {LocalStorage, SessionStorage} from '../../../lib';\n\n@Component({\n\tselector: 'eager',\n\ttemplateUrl: './template.html',\n\t//changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EagerComponent {\n\t@SessionStorage('variable', 'default value')\n\tpublic sessionBind;\n\t@LocalStorage('variable')\n\tpublic localBind;\n}","<div>\n\t<h5>Eager module</h5>\n\n\t<article>\n\t\t<div>local storage: {{localBind}}</div>\n\t\t<div><input type=\"text\" [value]=\"localBind\" (input)=\"localBind = $event.target.value\"></div>\n\t</article>\n\t<article>\n\t\t<div>session storage: {{sessionBind}}</div>\n\t\t<div><input type=\"text\" [value]=\"sessionBind\" (input)=\"sessionBind = $event.target.value\"></div>\n\t</article>\n</div>","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {SharedModule} from '../shared/module';\nimport {Components} from './components';\nimport {LocalStorageService, SessionStorageService, StrategyIndex} from '../lib';\n\n@NgModule({\n\timports: [\n\t\tSharedModule,\n\t],\n\texports: [...Components],\n\tdeclarations: [...Components],\n\tproviders: []\n})\nexport class EagerModule {\n\tconstructor(storage: LocalStorageService) {\n\t}\n\n\tstatic forRoot(): ModuleWithProviders<EagerModule> {\n\t\treturn {\n\t\t\tngModule: EagerModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {RootComponent} from './_components/root/root';\nimport {Components} from './_components';\nimport {SharedModule} from './shared/module';\n\nimport {LocalStorageService, NgxWebstorageModule} from './lib';\nimport {Routing} from './routing';\nimport {EagerModule} from './eager/module';\n\n@NgModule({\n\tdeclarations: [\n\t\t...Components\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tSharedModule,\n\t\tRouting,\n\t\tEagerModule,\n\t\tNgxWebstorageModule.forRoot({\n\t\t\tprefix: 'prefix',\n\t\t\tseparator: '--'\n\t\t}),\n\t\t// NgxWebstorageCrossStorageStrategyModule.forRoot({\n\t\t// \thost: 'http://localhost.crosstorage'\n\t\t// })\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INITIALIZER,\n\t\t\tuseFactory: (session: LocalStorageService) => {\n\t\t\t\tconsole.log('app init');\n\t\t\t\treturn () => {\n\t\t\t\t\tconsole.log(session);\n\t\t\t\t};\n\t\t\t},\n\t\t\tdeps: [LocalStorageService],\n\t\t\tmulti: true\n\t\t},\n\t\t//{provide: STORAGE_STRATEGIES, useFactory: () => new StorageStrategyStub(LocalStorageStrategy.strategyName), multi: true}\n\t],\n\tbootstrap: [RootComponent]\n})\nexport class AppModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\nimport {ModuleWithProviders} from '@angular/core';\n\nexport const ROUTES: Routes = [\n\t{\n\t\tpath: '',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tloadChildren: () => import('./lazy/module').then(m => m.LazyModule)\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '**',\n\t\t\t\tredirectTo: ''\n\t\t\t}\n\t\t]\n\t}\n];\n\nexport const Routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' });\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n\timports: [],\n\texports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n\tdeclarations: [],\n\tproviders: [],\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\t.catch(err => console.error(err));\n"]}