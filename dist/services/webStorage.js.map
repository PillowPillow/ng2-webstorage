{"version":3,"file":"webStorage.js","sourceRoot":"","sources":["../../lib/services/webStorage.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,qBAAqB,EAAC,MAAM,kBAAkB,CAAC;AAI3F,IAAA;IAEC,2BAAoB,KAAoB;4CAAA;QAApB,UAAK,GAAL,KAAK,CAAe;QACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACnB;IAEM,iCAAK,GAAZ,UAAa,GAAU,EAAE,KAAS;QACjC,IAAI,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAChD;IAEM,oCAAQ,GAAf,UAAgB,GAAU;QACzB,IAAI,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACnD;IAEM,iCAAK,GAAZ,UAAa,GAAW;QACvB,EAAE,CAAA,CAAC,GAAG,CAAC;YAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,IAAI;YAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3C;IAEM,mCAAO,GAAd,UAAe,GAAU;QACxB,IAAI,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACvD;IAEM,8CAAkB,GAAzB;QACC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvD;4BAjCF;IAmCC,CAAA;AA9BD,6BA8BC","sourcesContent":["import {EventEmitter} from '@angular/core';\nimport {KeyStorageHelper, WebStorageHelper, StorageObserverHelper} from '../helpers/index';\nimport {IStorage} from '../interfaces';\nimport {STORAGE} from '../enums/storage';\n\nexport class WebStorageService implements IStorage {\n\n\tconstructor(private sType:STORAGE = null) {\n\t\tthis.sType = sType;\n\t}\n\n\tpublic store(raw:string, value:any):void {\n\t\tlet sKey = KeyStorageHelper.genKey(raw);\n\t\tWebStorageHelper.store(this.sType, sKey, value);\n\t}\n\n\tpublic retrieve(raw:string):any {\n\t\tlet sKey = KeyStorageHelper.genKey(raw);\n\t\treturn WebStorageHelper.retrieve(this.sType, sKey);\n\t}\n\n\tpublic clear(raw?:string):void {\n\t\tif(raw) WebStorageHelper.clear(this.sType, KeyStorageHelper.genKey(raw));\n\t\telse WebStorageHelper.clearAll(this.sType);\n\t}\n\n\tpublic observe(raw:string):EventEmitter<any> {\n\t\tlet sKey = KeyStorageHelper.genKey(raw);\n\t\treturn StorageObserverHelper.observe(this.sType, sKey);\n\t}\n\n\tpublic isStorageAvailable():boolean {\n\t\treturn WebStorageHelper.isStorageAvailable(this.sType);\n\t}\n\n}\n"]}