{"version":3,"file":"keyStorage.js","sourceRoot":"","sources":["../../lib/helpers/keyStorage.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,OAAO,EAAE,sBAAsB,EAAE,iBAAiB,EAAC,MAAM,kBAAkB,CAAC;AAEpF,IAAI,cAAc,GAAG,OAAO,CAAC;AAC7B,IAAI,wBAAwB,GAAG,iBAAiB,CAAC;AACjD,IAAI,6BAA6B,GAAG,sBAAsB,CAAC;AAE3D,MAAM,uBAAuB,IAAW;IACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;CACrE;AAED,IAAA;;;IAEQ,6BAAY,GAAnB,UAAoB,IAAW;QAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;KACrE;IAEM,wCAAuB,GAA9B,UAA+B,OAAmB;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;KACjD;IAEM,uBAAM,GAAb,UAAc,GAAU;QACvB,EAAE,CAAA,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;YAC1B,MAAM,KAAK,CAAC,2DAA2D,CAAC,CAAC;QAC1E,MAAM,CAAC,KAAG,cAAc,GAAG,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAG,CAAC;KAC5E;IAEM,0BAAS,GAAhB,UAAiB,GAAU;QAC1B,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACzB,MAAM,CAAC,6BAA6B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KAC/D;IAEM,oCAAmB,GAA1B,UAA2B,GAAoB;QAApB,oBAAA,EAAA,aAAoB;QAC9C,cAAc,GAAG,GAAG,CAAC;KACrB;IAEM,mCAAkB,GAAzB,UAA0B,MAAuC;QAAvC,uBAAA,EAAA,+BAAuC;QAChE,6BAA6B,GAAG,MAAM,CAAC;KACvC;IAEM,uCAAsB,GAA7B,UAA8B,SAAoC;QAApC,0BAAA,EAAA,6BAAoC;QACjE,wBAAwB,GAAG,SAAS,CAAC;KACrC;2BA1CF;IA2CC,CAAA;AAhCD,4BAgCC","sourcesContent":["import {IWebStorage} from '../interfaces/webStorage';\r\nimport {LIB_KEY, LIB_KEY_CASE_SENSITIVE, LIB_KEY_SEPARATOR} from '../constants/lib';\r\n\r\nlet CUSTOM_LIB_KEY = LIB_KEY;\r\nlet CUSTOM_LIB_KEY_SEPARATOR = LIB_KEY_SEPARATOR;\r\nlet CUSTOM_LIB_KEY_CASE_SENSITIVE = LIB_KEY_CASE_SENSITIVE;\r\n\r\nexport function isManagedKey(sKey:string):boolean {\r\n\treturn sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n}\r\n\r\nexport class KeyStorageHelper {\r\n\r\n\tstatic isManagedKey(sKey:string):boolean {\r\n\t\treturn sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n\t}\r\n\r\n\tstatic retrieveKeysFromStorage(storage:IWebStorage):Array<string> {\r\n\t\treturn Object.keys(storage).filter(isManagedKey);\r\n\t}\r\n\r\n\tstatic genKey(raw:string):string {\r\n\t\tif(typeof raw !== 'string')\r\n\t\t\tthrow Error('attempt to generate a storage key with a non string value');\r\n\t\treturn `${CUSTOM_LIB_KEY}${CUSTOM_LIB_KEY_SEPARATOR}${this.formatKey(raw)}`;\r\n\t}\r\n\r\n\tstatic formatKey(raw:string):string {\r\n\t\tlet key = raw.toString();\r\n\t\treturn CUSTOM_LIB_KEY_CASE_SENSITIVE ? key : key.toLowerCase();\r\n\t}\r\n\r\n\tstatic setStorageKeyPrefix(key:string = LIB_KEY) {\r\n\t\tCUSTOM_LIB_KEY = key;\r\n\t}\r\n\r\n\tstatic setCaseSensitivity(enable:boolean = LIB_KEY_CASE_SENSITIVE) {\r\n\t\tCUSTOM_LIB_KEY_CASE_SENSITIVE = enable;\r\n\t}\r\n\r\n\tstatic setStorageKeySeparator(separator:string = LIB_KEY_SEPARATOR) {\r\n\t\tCUSTOM_LIB_KEY_SEPARATOR = separator;\r\n\t}\r\n}\r\n"]}