version: 2.1

anchor_1: &wdir
  working_directory: ~/app
anchor_2: &publish_workflow_filters
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^\d+\.\d+\.\d+.*$/

executors:
  node:
    <<: *wdir
    docker:
    - image: circleci/node:10
  node-browsers:
    <<: *wdir
    docker:
    - image: circleci/node:10-browsers

jobs:
  install_dependencies:
    executor: node
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Setup Dependencies
        command: npm install --silent --ignore-scripts
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
        - ./node_modules
    - persist_to_workspace:
        root: .
        paths: node_modules

  unit_test:
    executor: node-browsers
    description: Start the unit tests for the given project
    parameters:
      project:
        description: angular project's name
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - run:
        name: Run unit tests
        command: npm run test -- "<< parameters.project >>" --browsers chrome_headless --watch=false --code-coverage --progress=false
    - store_test_results:
        path: ./junit
    - store_artifacts:
        path: ./coverage

  build:
    executor: node
    description: Build an angular project
    parameters:
      project:
        description: angular project's name
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - run:
        name: Build app
        command: npm run build -- "<< parameters.project >>"
    - persist_to_workspace:
        root: .
        paths: dist

  publish:
    executor: node
    description: Npm publish if the local & remote's versions mismatch
    parameters:
      project:
        description: angular project's name
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - run:
        name: Authenticate with registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/app/.npmrc
    - run:
        name: Publish package
        command: sh bin/npm_publish.sh << parameters.project >>

workflows:

  ci:
    jobs:
    - install_dependencies

    - unit_test:
        project: ngx-webstorage
        requires:
        - install_dependencies

    - build:
        project: ngx-webstorage
        requires:
        - install_dependencies

  deploy:
    jobs:
    - install_dependencies:
        <<: *publish_workflow_filters

    - unit_test:
        <<: *publish_workflow_filters
        project: ngx-webstorage
        requires:
        - install_dependencies

    - build:
        <<: *publish_workflow_filters
        project: ngx-webstorage
        requires:
        - install_dependencies

    - publish:
        <<: *publish_workflow_filters
        context: "open source"
        project: ngx-webstorage
        requires:
        - unit_test
        - build
